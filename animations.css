@keyframes slide-in {
  from {
    transform: translateX(-100%);
  }

  tp {
    transform: translateX(0%);
  }
}

@keyframes spin-back-and-forth {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(0);
  }
}

.element {
  animation: slide-in 1s;

  /* default value for the timing-function */
  animation-timing-function: ease;

  /* the default value is 1 */
  animation-iteration-count: 1;
  /* one spacial keyword is supported: infinite */
  animation-iteration-count: infinite;

  /* animation-delay also exists, just like transition-delay */
  animation-delay: 500ms;

  /* default value is normal, the animation transitions from 0% to 100% */
  animation-direction: normal;
  /* the animation transitions from 100% to 0% */
  animation-direction: reverse;
  /* the animation transitions from 0% to 100% and then from 100% to 0% */
  animation-direction: alternate;
  /* the animation transitions from 100% to 0% and then from 0% to 100% */
  animation-direction: alternate-reverse;

  /*
    default value is none, which means that the initial and final values of those css rules
    applied in the animation are not applied to the element before the animation starts
    or after it ends
  */
  animation-fill-mode: none;
  /*
    the initial values of the css rules applied in the animation are applied to the element
    before the animation starts, which matters when animation-delay is set
  */
  animation-fill-mode: backwards;
  /*
    the final values of the css rules applied in the animation are applied to the element
    after the animation ends
  */
  animation-fill-mode: forwards;
  /*
    the initial and final values of the css rules applied in the animation are applied to the element
    before the animation starts and after it ends
  */
  animation-fill-mode: both;

  /* 
    default value is running, which means that the transitions stated in the keyframes of the
    animation set are applied to the element
   */
  animation-play-state: running;
  /*
    the animation gets paused on whatever state it was when this property is set
  */
  animation-play-state: paused;
}
